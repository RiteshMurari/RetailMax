pipeline {
    agent any

    environment {
        IMAGE_NAME = 'adityatomar25/retailmax-monolith'
        IMAGE_TAG = "build-${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main',
                    credentialsId: 'b2c3e09b-26e7-4572-b583-c4cbd70387c4',
                    url: 'https://github.com/adityatomar25/RetailMax.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('monolith-app/backend') {
                    sh 'npm install'
                }
            }
        }

        stage('Run Unit Tests') {
            steps {
                dir('monolith-app/backend') {
                    sh 'npm test'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('monolith-app') {
                    sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
                }
            }
        }

        stage('Scan Docker Image (Trivy)') {
            steps {
                sh "trivy image ${IMAGE_NAME}:${IMAGE_TAG} || true"
            }
        }

        stage('Push to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        set -e
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push ${IMAGE_NAME}:${IMAGE_TAG}
                        docker logout
                    """
                }
            }
        }
    
        stage('Deploy via Ansible') {
    steps {
        echo 'Deploying with Ansible...'
        sh 'chmod +x ansible-retailmax/deploy.sh'
        sh './ansible-retailmax/deploy.sh'
    }
}
    
    }


    post {
    success {
        mail to: 'adityatomar0025@gmail.com',
             subject: "RetailMax Build & Deployment Success - Build #${BUILD_NUMBER}",
             body: """
 Deployment Successful!

Docker Image: ${IMAGE_NAME}:${IMAGE_TAG}
Jenkins Build URL: ${env.BUILD_URL}
Ansible deployment executed successfully.

RetailMax CI/CD
"""
    }

    failure {
        mail to: 'adityatomar0025@gmail.com',
             subject: "RetailMax Build or Deployment Failed - Build #${BUILD_NUMBER}",
             body: """
 Something went wrong during Build or Deployment.

Check Jenkins logs for details:
${env.BUILD_URL}

 RetailMax CI/CD
"""
    }
}
}
        